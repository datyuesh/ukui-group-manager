/*
 * This file was generated by qdbusxml2cpp version 0.8
 * Command line was: qdbusxml2cpp -p groupmanager_interface.h: ../../group-manager-server/org.ukui.groupmanager.xml
 *
 * qdbusxml2cpp is Copyright (C) 2020 The Qt Company Ltd.
 *
 * This is an auto-generated file.
 * Do not edit! All changes made to it will be lost.
 */

#ifndef GROUPMANAGER_INTERFACE_H
#define GROUPMANAGER_INTERFACE_H

#include <QtCore/QObject>
#include <QtCore/QByteArray>
#include <QtCore/QList>
#include <QtCore/QMap>
#include <QtCore/QString>
#include <QtCore/QStringList>
#include <QtCore/QVariant>
#include <QtDBus/QtDBus>

/*
 * Proxy class for interface org.ukui.groupmanager.interface
 */
class OrgUkuiGroupmanagerInterfaceInterface: public QDBusAbstractInterface
{
    Q_OBJECT
public:
    static inline const char *staticInterfaceName()
    { return "org.ukui.groupmanager.interface"; }

public:
    OrgUkuiGroupmanagerInterfaceInterface(const QString &service, const QString &path, const QDBusConnection &connection, QObject *parent = nullptr);

    ~OrgUkuiGroupmanagerInterfaceInterface();

public Q_SLOTS: // METHODS
    inline QDBusPendingReply<bool> add(const QString &groupName, const QString &groupId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(groupName) << QVariant::fromValue(groupId);
        return asyncCallWithArgumentList(QStringLiteral("add"), argumentList);
    }

    inline QDBusPendingReply<bool> del(const QString &groupName, const QString &groupId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(groupName) << QVariant::fromValue(groupId);
        return asyncCallWithArgumentList(QStringLiteral("del"), argumentList);
    }

    inline QDBusPendingReply<QVariantList> get()
    {
        QList<QVariant> argumentList;
        return asyncCallWithArgumentList(QStringLiteral("get"), argumentList);
    }

    inline QDBusPendingReply<bool> set(const QString &groupName, const QString &groupId)
    {
        QList<QVariant> argumentList;
        argumentList << QVariant::fromValue(groupName) << QVariant::fromValue(groupId);
        return asyncCallWithArgumentList(QStringLiteral("set"), argumentList);
    }

Q_SIGNALS: // SIGNALS
};

namespace org {
  namespace ukui {
    namespace groupmanager {
      typedef ::OrgUkuiGroupmanagerInterfaceInterface interface;
    }
  }
}
#endif
